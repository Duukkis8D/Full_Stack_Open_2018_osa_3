{"version":3,"sources":["components/PersonsList.js","components/Filter.js","components/AddPerson.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonsList","props","persons","showAll","filter","person","name","toUpperCase","includes","search","id","map","phone","onClick","removePerson","Filter","value","onChange","handleSearch","AddPerson","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","type","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","delete","App","React","Component","constructor","super","addPerson","event","preventDefault","foundDuplicate","this","state","forEach","target","addPersonToServer","setState","setTimeout","personsService","newPerson","concat","personID","personName","window","confirm","componentDidMount","render","onSubmit","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1c970f7b.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonsList = (props) => {\n    const persons =\n        props.showAll ?\n            props.persons :\n            props.persons.filter(person => person.name.toUpperCase().includes(props.search.toUpperCase()));\n\n    return (\n        <div id=\"personsListContainer\">\n            <table>\n                <thead></thead>\n                <tbody>\n                    { persons.map(person => <tr key={person.name}>\n                                                <td key={person.name}>{person.name}</td>\n                                                <td key={person.phone}>{person.phone}</td>\n                                                <td>\n                                                    <button onClick={props.removePerson(person.id, person.name)}>\n                                                        Poista\n                                                    </button>\n                                                </td>\n                                            </tr>) }\n                </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default PersonsList","import React from 'react';\n\nconst Filter = (props) => {\n    return (\n        <div id=\"filterContainer\">\n            <label>Kirjoita hakusana</label>\n            <input value={props.search} onChange={props.handleSearch}/>\n        </div>\n    );\n};\n\nexport default Filter","import React from 'react';\n\nconst AddPerson = (props) => {\n    return (\n        <div id=\"addPersonContainer\">\n            <label>Nimi</label>\n            <input value={props.newName} onChange={props.handleNameChange}/>\n            <label>Numero</label>\n            <input value={props.newPhoneNumber} onChange={props.handlePhoneNumberChange}/>\n            <button type=\"submit\">Lisää tiedot</button>\n        </div>\n    );\n};\n\nexport default AddPerson","import React from 'react';\n\nconst Notification = (props) => {\n    if (props.message === '') return <div id=\"notificationEmpty\"></div>;\n\n    return (\n        <div id=\"notification\">{props.message}</div>\n    );\n};\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n};\n\nconst remove = (id) => {\n    axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, remove }","import React from 'react';\nimport PersonsList from './components/PersonsList';\nimport Filter from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport Notification from './components/Notification';\nimport personsService from './services/persons';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: [],\n            newName: '',\n            newPhoneNumber: '',\n            search: '',\n            showAll: true,\n            message: ''\n        };\n    }\n\n    componentDidMount() {\n        personsService\n            .getAll()\n            .then(response => {\n                this.setState({ persons: response });\n            });\n    }\n\n    addPerson = (event) => {\n        event.preventDefault();\n\n        /* [0] vaaditaan targetissa:\n        https://forum.freecodecamp.org/t/getting-an-input-value-when-form-is-submitted-react/161870 */\n        let foundDuplicate = false;\n        this.state.persons.forEach(function(person) {\n            if (person.name === event.target[0].value || person.phone === event.target[1].value) {\n                foundDuplicate = true;\n            }\n        });\n\n        if (foundDuplicate === false) {\n            this.addPersonToServer(event);\n            this.setState({ message: `Lisättiin ${event.target[0].value}` });\n            setTimeout(() => {\n                this.setState({ message: '' });\n            }, 5000);\n        }\n    };\n\n    addPersonToServer = (event) => {\n        const person = {\n            name: event.target[0].value,\n            phone: event.target[1].value\n        };\n        personsService\n            .create(person)\n            .then(newPerson => {\n                this.setState({\n                    persons: this.state.persons.concat(newPerson),\n                    newName: '',\n                    newPhoneNumber: ''\n                });\n            });\n    };\n\n    removePerson = (personID, personName) => {\n        return () => {\n            if (window.confirm(`Poistetaanko ${personName} ?`)) {\n                personsService.remove(personID);\n                this.setState({\n                    persons: this.state.persons.filter(person => person.id !== personID),\n                    message: `Poistettiin ${personName}`\n                });\n                setTimeout(() => {\n                    this.setState({ message: '' });\n                }, 5000);\n            }\n        }\n    };\n\n    handleNameChange = (event) => {\n        this.setState({ newName: event.target.value });\n    };\n\n    handlePhoneNumberChange = (event) => {\n        this.setState({ newPhoneNumber: event.target.value });\n    };\n\n    handleSearch = (event) => {\n        this.setState({\n            search: event.target.value,\n            showAll: false\n        });\n        if (event.target.value === '') this.setState({ showAll: true })\n    };\n\n    render() {\n        return (\n            <div id=\"appContainer\">\n                <h1>Puhelinluettelo</h1>\n                <Notification message={this.state.message}/>\n                <h2 id=\"addPersonHeadline\">Lisää uusi henkilö</h2>\n                <form id=\"addPersonForm\" onSubmit={this.addPerson}>\n                    <AddPerson newName={this.state.newName}\n                               newPhoneNumber={this.state.newPhoneNumber}\n                               handleNameChange={this.handleNameChange}\n                               handlePhoneNumberChange={this.handlePhoneNumberChange}/>\n                </form>\n                <h2 id=\"filterHeadline\">Rajaa näytettäviä</h2>\n                <Filter search={this.state.search} handleSearch={this.handleSearch}/>\n                <h2 id=\"personsListHeadline\">Henkilöt</h2>\n                <PersonsList persons={this.state.persons}\n                             showAll={this.state.showAll}\n                             search={this.state.search}\n                             removePerson={this.removePerson}/>\n                <div id=\"fontInfo\">Font made from <a href=\"http://www.onlinewebfonts.com\">oNline Web Fonts</a> is licensed by CC BY 3.0</div>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}