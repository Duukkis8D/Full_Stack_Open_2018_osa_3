{"version":3,"sources":["components/PersonsList.js","components/Filter.js","components/AddPerson.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonsList","props","persons","showAll","filter","person","name","toUpperCase","includes","search","id","map","phone","className","onClick","removePerson","Filter","value","onChange","handleSearch","AddPerson","for","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","type","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","delete","App","React","Component","constructor","super","addPerson","event","preventDefault","foundDuplicate","this","state","forEach","target","addPersonToServer","setState","setTimeout","personsService","newPerson","concat","personID","personName","window","confirm","componentDidMount","render","onSubmit","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.462e69e2.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonsList = (props) => {\n    const persons =\n        props.showAll ?\n            props.persons :\n            props.persons.filter(person => person.name.toUpperCase().includes(props.search.toUpperCase()));\n\n    return (\n        <div id=\"personsListContainer\">\n            <table>\n                <thead></thead>\n                <tbody>\n                    { persons.map(person => <tr key={person.name}>\n                                                <td key={person.name}>{person.name}</td>\n                                                <td key={person.phone}>{person.phone}</td>\n                                                <td>\n                                                    <button className=\"removeButton\"\n                                                            onClick={props.removePerson(person.id, person.name)}>\n                                                        Remove\n                                                    </button>\n                                                </td>\n                                            </tr>) }\n                </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default PersonsList","import React from 'react';\n\nconst Filter = (props) => {\n    return (\n        <div id=\"filterContainer\">\n            <label>Write search term</label>\n            <input value={props.search} onChange={props.handleSearch}/>\n        </div>\n    );\n};\n\nexport default Filter","import React from 'react';\n\nconst AddPerson = (props) => {\n    return (\n        <div id=\"addPersonContainer\">\n            <label for=\"name\">Name</label>\n            <input id=\"name\" value={props.newName} onChange={props.handleNameChange}/>\n            <label for=\"number\">Number</label>\n            <input id=\"number\" value={props.newPhoneNumber} onChange={props.handlePhoneNumberChange}/>\n            <button type=\"submit\">Add person</button>\n        </div>\n    );\n};\n\nexport default AddPerson","import React from 'react';\n\nconst Notification = (props) => {\n    if (props.message === '') return <div id=\"notificationEmpty\"></div>;\n\n    return (\n        <div id=\"notification\">{props.message}</div>\n    );\n};\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n};\n\nconst remove = (id) => {\n    axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, remove }","import React from 'react';\nimport PersonsList from './components/PersonsList';\nimport Filter from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport Notification from './components/Notification';\nimport personsService from './services/persons';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: [],\n            newName: '',\n            newPhoneNumber: '',\n            search: '',\n            showAll: true,\n            message: ''\n        };\n    }\n\n    componentDidMount() {\n        personsService\n            .getAll()\n            .then(response => {\n                this.setState({ persons: response });\n            });\n    }\n\n    addPerson = (event) => {\n        event.preventDefault();\n\n        /* [0] vaaditaan targetissa:\n        https://forum.freecodecamp.org/t/getting-an-input-value-when-form-is-submitted-react/161870 */\n        let foundDuplicate = false;\n        this.state.persons.forEach(function(person) {\n            if (person.name === event.target[0].value || person.phone === event.target[1].value) {\n                foundDuplicate = true;\n            }\n        });\n\n        if (foundDuplicate === false) {\n            this.addPersonToServer(event);\n            this.setState({ message: `${event.target[0].value} has been added to list` });\n            setTimeout(() => {\n                this.setState({ message: '' });\n            }, 5000);\n        }\n    };\n\n    addPersonToServer = (event) => {\n        const person = {\n            name: event.target[0].value,\n            phone: event.target[1].value\n        };\n        personsService\n            .create(person)\n            .then(newPerson => {\n                this.setState({\n                    persons: this.state.persons.concat(newPerson),\n                    newName: '',\n                    newPhoneNumber: ''\n                });\n            });\n    };\n\n    removePerson = (personID, personName) => {\n        return () => {\n            if (window.confirm(`Do you want to remove ${personName} ?`)) {\n                personsService.remove(personID);\n                this.setState({\n                    persons: this.state.persons.filter(person => person.id !== personID),\n                    message: `${personName} has been removed`\n                });\n                setTimeout(() => {\n                    this.setState({ message: '' });\n                }, 5000);\n            }\n        }\n    };\n\n    handleNameChange = (event) => {\n        this.setState({ newName: event.target.value });\n    };\n\n    handlePhoneNumberChange = (event) => {\n        this.setState({ newPhoneNumber: event.target.value });\n    };\n\n    handleSearch = (event) => {\n        this.setState({\n            search: event.target.value,\n            showAll: false\n        });\n        if (event.target.value === '') this.setState({ showAll: true })\n    };\n\n    render() {\n        return (\n            <div id=\"appContainer\">\n                <h1>Phonebook</h1>\n                <Notification message={this.state.message}/>\n                <h2 id=\"addPersonHeadline\">Add new person</h2>\n                <form id=\"addPersonForm\" onSubmit={this.addPerson}>\n                    <AddPerson newName={this.state.newName}\n                               newPhoneNumber={this.state.newPhoneNumber}\n                               handleNameChange={this.handleNameChange}\n                               handlePhoneNumberChange={this.handlePhoneNumberChange}/>\n                </form>\n                <h2 id=\"filterHeadline\">Filter list</h2>\n                <Filter search={this.state.search} handleSearch={this.handleSearch}/>\n                <h2 id=\"personsListHeadline\">Persons</h2>\n                <PersonsList persons={this.state.persons}\n                             showAll={this.state.showAll}\n                             search={this.state.search}\n                             removePerson={this.removePerson}/>\n                <div id=\"fontInfo\">Font made from <a href=\"http://www.onlinewebfonts.com\">oNline Web Fonts</a> is licensed by CC BY 3.0</div>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}